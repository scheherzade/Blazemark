
 Daxpy product:
   Blaze [MFlop/s]:
     1000        6259.65
   N=1000, steps=6262476
     Blaze       = 1        (2.0009)
/threads{locality#0/total}/idle-rate,1,6.734063,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.734076,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.734080,[s],1.76523e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.734081,[s],1.71997e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.734084,[s],447204,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.734086,[s],447501,[ns]
/threads{locality#0/total}/count/cumulative,1,6.734089,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.734090,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.734092,[s],10190,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.734093,[s],9971,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000       4086.11
   N=10000, steps=406874
     Blaze       = 1        (1.9915)
/threads{locality#0/total}/idle-rate,1,6.679719,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.679735,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.679739,[s],1.74499e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.679740,[s],1.70024e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.679744,[s],451026,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.679745,[s],451339,[ns]
/threads{locality#0/total}/count/cumulative,1,6.679748,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.679749,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.679751,[s],10279,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.679752,[s],10056,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     100000      1043.59
   N=100000, steps=10479
     Blaze       = 1        (2.00825)
/threads{locality#0/total}/idle-rate,1,6.890320,[s],585,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.890333,[s],585,[0.01%]
/threads{locality#0/total}/time/average,1,6.890337,[s],25182,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.890338,[s],25182,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.890341,[s],4.44892e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.890343,[s],4.44892e+08,[ns]
/threads{locality#0/total}/count/cumulative,1,6.890346,[s],284298
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.890347,[s],284299
/threads{locality#0/total}/time/average-overhead,1,6.890349,[s],1564,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.890350,[s],1564,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     1000000     1197.64
   N=1000000, steps=1211
     Blaze       = 1        (2.02232)
/threads{locality#0/total}/idle-rate,1,6.557590,[s],80,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.557606,[s],80,[0.01%]
/threads{locality#0/total}/time/average,1,6.557610,[s],207358,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.557612,[s],207352,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.557616,[s],5.26734e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.557618,[s],5.26737e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,6.557621,[s],31146
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.557622,[s],31147
/threads{locality#0/total}/time/average-overhead,1,6.557625,[s],1691,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.557627,[s],1691,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000000    1069.16
   N=10000000, steps=106
     Blaze       = 1        (1.98287)
/threads{locality#0/total}/idle-rate,1,7.233539,[s],18,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.233556,[s],18,[0.01%]
/threads{locality#0/total}/time/average,1,7.233560,[s],2.53356e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.233562,[s],2.53266e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.233566,[s],1.3184e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.233568,[s],1.31844e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,7.233571,[s],2834
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.233573,[s],2835
/threads{locality#0/total}/time/average-overhead,1,7.233576,[s],4649,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.233577,[s],4647,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.015214,[s],308,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.015238,[s],308,[0.01%]
/threads{locality#0/total}/time/average,1,0.015245,[s],381331,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.015248,[s],371708,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.015254,[s],462530,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.015257,[s],463166,[ns]
/threads{locality#0/total}/count/cumulative,1,0.015262,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.015265,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.015268,[s],10571,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.015271,[s],10349,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.007759,[s],348,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.007772,[s],348,[0.01%]
/threads{locality#0/total}/time/average,1,0.007776,[s],192821,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.007778,[s],187969,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.007781,[s],265335,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.007783,[s],265682,[ns]
/threads{locality#0/total}/count/cumulative,1,0.007785,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.007787,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.007789,[s],6058,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.007790,[s],5930,[ns]
