
 Daxpy product:
   Blaze [MFlop/s]:
     1000        6258.28
   N=1000, steps=6254216
     Blaze       = 1        (1.9987)
/threads{locality#0/total}/idle-rate,1,6.733318,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.733334,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.733338,[s],1.75959e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.733339,[s],1.71447e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.733343,[s],505458,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.733344,[s],505773,[ns]
/threads{locality#0/total}/count/cumulative,1,6.733347,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.733348,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.733350,[s],11514,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.733351,[s],11265,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000       4411.13
   N=10000, steps=441801
     Blaze       = 1        (2.00312)
/threads{locality#0/total}/idle-rate,1,6.695307,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.695320,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.695324,[s],1.75158e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.695325,[s],1.70667e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.695329,[s],460897,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.695330,[s],461211,[ns]
/threads{locality#0/total}/count/cumulative,1,6.695333,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.695334,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.695342,[s],10504,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.695344,[s],10278,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     100000      1050.55
   N=100000, steps=10550
     Blaze       = 1        (2.00848)
/threads{locality#0/total}/idle-rate,1,6.873732,[s],588,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.873746,[s],588,[0.01%]
/threads{locality#0/total}/time/average,1,6.873750,[s],22374,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.873752,[s],22374,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.873755,[s],4.00252e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.873756,[s],4.00252e+08,[ns]
/threads{locality#0/total}/count/cumulative,1,6.873759,[s],286002
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.873760,[s],286003
/threads{locality#0/total}/time/average-overhead,1,6.873762,[s],1399,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.873763,[s],1399,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     1000000     1191.62
   N=1000000, steps=1210
     Blaze       = 1        (2.03084)
/threads{locality#0/total}/idle-rate,1,6.625154,[s],83,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.625171,[s],83,[0.01%]
/threads{locality#0/total}/time/average,1,6.625175,[s],208394,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.625176,[s],208387,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.625180,[s],5.46221e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.625181,[s],5.46224e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,6.625184,[s],31122
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.625186,[s],31123
/threads{locality#0/total}/time/average-overhead,1,6.625188,[s],1755,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.625189,[s],1754,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000000    1069.83
   N=10000000, steps=106
     Blaze       = 1        (1.98162)
/threads{locality#0/total}/idle-rate,1,7.255953,[s],18,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.255970,[s],18,[0.01%]
/threads{locality#0/total}/time/average,1,7.255975,[s],2.52195e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.255976,[s],2.52106e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.255980,[s],1.33868e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.255982,[s],1.33872e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,7.255985,[s],2834
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.255987,[s],2835
/threads{locality#0/total}/time/average-overhead,1,7.255989,[s],4720,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.255990,[s],4719,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.009363,[s],280,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.009378,[s],280,[0.01%]
/threads{locality#0/total}/time/average,1,0.009381,[s],235331,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.009383,[s],229383,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.009386,[s],258732,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.009387,[s],259036,[ns]
/threads{locality#0/total}/count/cumulative,1,0.009390,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.009391,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.009394,[s],5908,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.009395,[s],5783,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.016326,[s],290,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.016351,[s],290,[0.01%]
/threads{locality#0/total}/time/average,1,0.016359,[s],408417,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.016362,[s],398114,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.016368,[s],466035,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.016371,[s],466779,[ns]
/threads{locality#0/total}/count/cumulative,1,0.016376,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.016379,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.016382,[s],10653,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.016385,[s],10429,[ns]
