
 Daxpy product:
   Blaze [MFlop/s]:
     1000        6260.7
   N=1000, steps=6261616
     Blaze       = 1        (2.00029)
/threads{locality#0/total}/idle-rate,1,6.761341,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.761354,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.761358,[s],1.76815e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.761359,[s],1.72282e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.761362,[s],463655,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.761364,[s],463938,[ns]
/threads{locality#0/total}/count/cumulative,1,6.761367,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.761368,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.761370,[s],10563,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.761371,[s],10335,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000       4375.29
   N=10000, steps=436976
     Blaze       = 1        (1.99747)
/threads{locality#0/total}/idle-rate,1,6.608134,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.608149,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.608152,[s],1.72601e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.608154,[s],1.68175e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.608157,[s],296955,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.608158,[s],297247,[ns]
/threads{locality#0/total}/count/cumulative,1,6.608161,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.608162,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.608164,[s],6776,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.608165,[s],6631,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     100000      1044.42
   N=100000, steps=10211
     Blaze       = 1        (1.95534)
/threads{locality#0/total}/idle-rate,1,6.285257,[s],600,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.285271,[s],600,[0.01%]
/threads{locality#0/total}/time/average,1,6.285275,[s],22423,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.285276,[s],22423,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.285279,[s],3.74365e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.285281,[s],3.74366e+08,[ns]
/threads{locality#0/total}/count/cumulative,1,6.285284,[s],261482
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.285285,[s],261483
/threads{locality#0/total}/time/average-overhead,1,6.285287,[s],1431,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.285288,[s],1431,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     1000000     1194.79
   N=1000000, steps=1187
     Blaze       = 1        (1.98697)
/threads{locality#0/total}/idle-rate,1,6.508150,[s],80,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.508166,[s],80,[0.01%]
/threads{locality#0/total}/time/average,1,6.508171,[s],209638,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.508172,[s],209632,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.508175,[s],5.17608e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.508177,[s],5.17611e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,6.508181,[s],30570
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.508182,[s],30571
/threads{locality#0/total}/time/average-overhead,1,6.508184,[s],1693,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.508186,[s],1693,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000000    1067.03
   N=10000000, steps=106
     Blaze       = 1        (1.98682)
/threads{locality#0/total}/idle-rate,1,7.271396,[s],18,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.271413,[s],18,[0.01%]
/threads{locality#0/total}/time/average,1,7.271418,[s],2.54626e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.271419,[s],2.54537e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.271423,[s],1.31438e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.271425,[s],1.31442e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,7.271428,[s],2834
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.271430,[s],2835
/threads{locality#0/total}/time/average-overhead,1,7.271432,[s],4635,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.271433,[s],4633,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.017373,[s],275,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.017400,[s],275,[0.01%]
/threads{locality#0/total}/time/average,1,0.017408,[s],434444,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.017411,[s],423482,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.017418,[s],470134,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.017421,[s],470943,[ns]
/threads{locality#0/total}/count/cumulative,1,0.017427,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.017430,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.017433,[s],10750,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.017436,[s],10525,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.015210,[s],293,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.015234,[s],293,[0.01%]
/threads{locality#0/total}/time/average,1,0.015241,[s],381263,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.015244,[s],371638,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.015250,[s],440089,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.015252,[s],440804,[ns]
/threads{locality#0/total}/count/cumulative,1,0.015258,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.015260,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.015263,[s],10061,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.015265,[s],9851,[ns]
