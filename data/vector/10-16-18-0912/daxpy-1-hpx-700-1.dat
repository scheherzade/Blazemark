
 Daxpy product:
   Blaze [MFlop/s]:
     1000        6258.51
   N=1000, steps=6260078
     Blaze       = 1        (2.0005)
/threads{locality#0/total}/idle-rate,1,6.713195,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.713210,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.713214,[s],1.74117e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.713216,[s],1.69652e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.713219,[s],388013,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.713220,[s],388330,[ns]
/threads{locality#0/total}/count/cumulative,1,6.713223,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.713224,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.713226,[s],8846,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.713227,[s],8656,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000       4384.56
   N=10000, steps=438370
     Blaze       = 1        (1.99961)
/threads{locality#0/total}/idle-rate,1,6.664005,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.664020,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.664024,[s],1.74071e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.664025,[s],1.69608e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.664028,[s],499565,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.664030,[s],499892,[ns]
/threads{locality#0/total}/count/cumulative,1,6.664033,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.664034,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.664036,[s],11382,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.664037,[s],11135,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     100000      1053.19
   N=100000, steps=10574
     Blaze       = 1        (2.00799)
/threads{locality#0/total}/idle-rate,1,6.840199,[s],592,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.840213,[s],592,[0.01%]
/threads{locality#0/total}/time/average,1,6.840217,[s],22251,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.840219,[s],22251,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.840222,[s],4.01973e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.840223,[s],4.01973e+08,[ns]
/threads{locality#0/total}/count/cumulative,1,6.840226,[s],286578
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.840227,[s],286579
/threads{locality#0/total}/time/average-overhead,1,6.840229,[s],1402,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.840230,[s],1402,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     1000000     1196.71
   N=1000000, steps=1210
     Blaze       = 1        (2.02221)
/threads{locality#0/total}/idle-rate,1,6.623749,[s],100,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.623765,[s],100,[0.01%]
/threads{locality#0/total}/time/average,1,6.623769,[s],209110,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.623770,[s],209104,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.623781,[s],6.59101e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.623783,[s],6.59105e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,6.623786,[s],31122
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.623788,[s],31123
/threads{locality#0/total}/time/average-overhead,1,6.623790,[s],2117,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.623791,[s],2117,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000000    1068.91
   N=10000000, steps=107
     Blaze       = 1        (2.00205)
/threads{locality#0/total}/idle-rate,1,7.338553,[s],17,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.338569,[s],17,[0.01%]
/threads{locality#0/total}/time/average,1,7.338574,[s],2.54837e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.338575,[s],2.54748e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.338586,[s],1.25e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.338588,[s],1.25004e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,7.338591,[s],2858
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.338593,[s],2859
/threads{locality#0/total}/time/average-overhead,1,7.338596,[s],4371,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.338597,[s],4369,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.015883,[s],306,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.015910,[s],306,[0.01%]
/threads{locality#0/total}/time/average,1,0.015918,[s],397296,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.015921,[s],387281,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.015928,[s],479367,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.015930,[s],480104,[ns]
/threads{locality#0/total}/count/cumulative,1,0.015936,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.015939,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.015942,[s],10954,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.015945,[s],10724,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.008360,[s],327,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.008375,[s],326,[0.01%]
/threads{locality#0/total}/time/average,1,0.008378,[s],208911,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.008380,[s],203641,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.008383,[s],269238,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.008385,[s],269550,[ns]
/threads{locality#0/total}/count/cumulative,1,0.008388,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.008389,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.008391,[s],6148,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.008392,[s],6018,[ns]
