
 Daxpy product:
   Blaze [MFlop/s]:
     1000        6257.39
   N=1000, steps=6263783
     Blaze       = 1        (2.00204)
/threads{locality#0/total}/idle-rate,1,6.749166,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.749179,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.749183,[s],1.76324e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.749185,[s],1.71803e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.749188,[s],481275,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.749189,[s],481569,[ns]
/threads{locality#0/total}/count/cumulative,1,6.749192,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.749193,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.749195,[s],10965,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.749196,[s],10728,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000       4397.83
   N=10000, steps=438161
     Blaze       = 1        (1.99262)
/threads{locality#0/total}/idle-rate,1,6.640506,[s],0,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.640519,[s],0,[0.01%]
/threads{locality#0/total}/time/average,1,6.640523,[s],1.73518e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.640525,[s],1.69069e+08,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.640528,[s],486422,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.640529,[s],486723,[ns]
/threads{locality#0/total}/count/cumulative,1,6.640532,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.640533,[s],43
/threads{locality#0/total}/time/average-overhead,1,6.640535,[s],11084,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.640536,[s],10844,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     100000      1052.5
   N=100000, steps=10202
     Blaze       = 1        (1.93862)
/threads{locality#0/total}/idle-rate,1,6.672697,[s],592,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.672712,[s],592,[0.01%]
/threads{locality#0/total}/time/average,1,6.672716,[s],22413,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.672718,[s],22412,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.672721,[s],3.91614e+08,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.672722,[s],3.91614e+08,[ns]
/threads{locality#0/total}/count/cumulative,1,6.672725,[s],277650
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.672727,[s],277651
/threads{locality#0/total}/time/average-overhead,1,6.672728,[s],1410,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.672729,[s],1410,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     1000000     1189.34
   N=1000000, steps=1204
     Blaze       = 1        (2.02466)
/threads{locality#0/total}/idle-rate,1,6.615050,[s],86,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,6.615066,[s],86,[0.01%]
/threads{locality#0/total}/time/average,1,6.615071,[s],209907,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,6.615072,[s],209900,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,6.615076,[s],5.69143e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,6.615078,[s],5.69147e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,6.615081,[s],30978
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,6.615083,[s],30979
/threads{locality#0/total}/time/average-overhead,1,6.615086,[s],1837,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,6.615087,[s],1837,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
     10000000    1069.04
   N=10000000, steps=106
     Blaze       = 1        (1.98308)
/threads{locality#0/total}/idle-rate,1,7.238155,[s],18,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.238172,[s],18,[0.01%]
/threads{locality#0/total}/time/average,1,7.238176,[s],2.2823e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.238178,[s],2.28149e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.238191,[s],1.20999e+07,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.238194,[s],1.21003e+07,[ns]
/threads{locality#0/total}/count/cumulative,1,7.238197,[s],2834
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.238199,[s],2835
/threads{locality#0/total}/time/average-overhead,1,7.238202,[s],4266,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.238203,[s],4265,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.015275,[s],303,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.015300,[s],303,[0.01%]
/threads{locality#0/total}/time/average,1,0.015307,[s],382155,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.015310,[s],372516,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.015316,[s],456851,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.015319,[s],457569,[ns]
/threads{locality#0/total}/count/cumulative,1,0.015325,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.015328,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.015331,[s],10442,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.015334,[s],10222,[ns]

 Daxpy product:
   Blaze [MFlop/s]:
/threads{locality#0/total}/idle-rate,1,0.008854,[s],300,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,0.008870,[s],300,[0.01%]
/threads{locality#0/total}/time/average,1,0.008874,[s],221029,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,0.008876,[s],215453,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,0.008879,[s],261037,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,0.008880,[s],261386,[ns]
/threads{locality#0/total}/count/cumulative,1,0.008883,[s],42
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,0.008884,[s],43
/threads{locality#0/total}/time/average-overhead,1,0.008886,[s],5963,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,0.008887,[s],5838,[ns]
