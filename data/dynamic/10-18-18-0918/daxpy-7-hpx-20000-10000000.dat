
 Daxpy product:
   Blaze [MFlop/s]:
     10000000    2199.96
   N=10000000, steps=220
     Blaze       = 1        (2.00004)
/threads{locality#0/total}/idle-rate,1,7.089806,[s],3063,[0.01%]
/threads{locality#0/pool#default/worker-thread#0}/idle-rate,1,7.089820,[s],2854,[0.01%]
/threads{locality#0/pool#default/worker-thread#1}/idle-rate,1,7.089572,[s],2774,[0.01%]
/threads{locality#0/pool#default/worker-thread#2}/idle-rate,1,7.088687,[s],3255,[0.01%]
/threads{locality#0/pool#default/worker-thread#3}/idle-rate,1,7.088558,[s],3130,[0.01%]
/threads{locality#0/pool#default/worker-thread#4}/idle-rate,1,7.088596,[s],3116,[0.01%]
/threads{locality#0/pool#default/worker-thread#5}/idle-rate,1,7.088607,[s],3182,[0.01%]
/threads{locality#0/pool#default/worker-thread#6}/idle-rate,1,7.089830,[s],3129,[0.01%]
/threads{locality#0/total}/time/average,1,7.088714,[s],4.62215e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average,1,7.089606,[s],4.93952e+06,[ns]
/threads{locality#0/pool#default/worker-thread#1}/time/average,1,7.089860,[s],4.8472e+06,[ns]
/threads{locality#0/pool#default/worker-thread#2}/time/average,1,7.089851,[s],4.42676e+06,[ns]
/threads{locality#0/pool#default/worker-thread#3}/time/average,1,7.089854,[s],4.53405e+06,[ns]
/threads{locality#0/pool#default/worker-thread#4}/time/average,1,7.088733,[s],4.61769e+06,[ns]
/threads{locality#0/pool#default/worker-thread#5}/time/average,1,7.089874,[s],4.50817e+06,[ns]
/threads{locality#0/pool#default/worker-thread#6}/time/average,1,7.089879,[s],4.49295e+06,[ns]
/threads{locality#0/total}/time/cumulative-overhead,1,7.089650,[s],1.5034e+10,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/cumulative-overhead,1,7.088670,[s],2.00116e+09,[ns]
/threads{locality#0/pool#default/worker-thread#1}/time/cumulative-overhead,1,7.089895,[s],1.9451e+09,[ns]
/threads{locality#0/pool#default/worker-thread#2}/time/cumulative-overhead,1,7.088679,[s],2.28268e+09,[ns]
/threads{locality#0/pool#default/worker-thread#3}/time/cumulative-overhead,1,7.089918,[s],2.19523e+09,[ns]
/threads{locality#0/pool#default/worker-thread#4}/time/cumulative-overhead,1,7.088798,[s],2.18476e+09,[ns]
/threads{locality#0/pool#default/worker-thread#5}/time/cumulative-overhead,1,7.089926,[s],2.23173e+09,[ns]
/threads{locality#0/pool#default/worker-thread#6}/time/cumulative-overhead,1,7.088674,[s],2.19351e+09,[ns]
/threads{locality#0/total}/count/cumulative,1,7.089951,[s],7380
/threads{locality#0/pool#default/worker-thread#0}/count/cumulative,1,7.088719,[s],1014
/threads{locality#0/pool#default/worker-thread#1}/count/cumulative,1,7.089958,[s],1048
/threads{locality#0/pool#default/worker-thread#2}/count/cumulative,1,7.089962,[s],1074
/threads{locality#0/pool#default/worker-thread#3}/count/cumulative,1,7.089966,[s],1063
/threads{locality#0/pool#default/worker-thread#4}/count/cumulative,1,7.089971,[s],1047
/threads{locality#0/pool#default/worker-thread#5}/count/cumulative,1,7.088721,[s],1061
/threads{locality#0/pool#default/worker-thread#6}/count/cumulative,1,7.088764,[s],1075
/threads{locality#0/total}/time/average-overhead,1,7.089991,[s],2.035e+06,[ns]
/threads{locality#0/pool#default/worker-thread#0}/time/average-overhead,1,7.088870,[s],1.97353e+06,[ns]
/threads{locality#0/pool#default/worker-thread#1}/time/average-overhead,1,7.090012,[s],1.85256e+06,[ns]
/threads{locality#0/pool#default/worker-thread#2}/time/average-overhead,1,7.090028,[s],2.11956e+06,[ns]
/threads{locality#0/pool#default/worker-thread#3}/time/average-overhead,1,7.089782,[s],2.06513e+06,[ns]
/threads{locality#0/pool#default/worker-thread#4}/time/average-overhead,1,7.089786,[s],2.08482e+06,[ns]
/threads{locality#0/pool#default/worker-thread#5}/time/average-overhead,1,7.088809,[s],2.10157e+06,[ns]
/threads{locality#0/pool#default/worker-thread#6}/time/average-overhead,1,7.088776,[s],2.03679e+06,[ns]
